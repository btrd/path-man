// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: adn_exchange.proto

#ifndef PROTOBUF_adn_5fexchange_2eproto__INCLUDED
#define PROTOBUF_adn_5fexchange_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3000000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3000000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)

namespace pathman {

// Internal implementation detail -- do not call these.
void protobuf_AddDesc_adn_5fexchange_2eproto();
void protobuf_AssignDesc_adn_5fexchange_2eproto();
void protobuf_ShutdownFile_adn_5fexchange_2eproto();

class Adn;

// ===================================================================

class Adn : public ::google::protobuf::Message {
 public:
  Adn();
  virtual ~Adn();

  Adn(const Adn& from);

  inline Adn& operator=(const Adn& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Adn& default_instance();

  void Swap(Adn* other);

  // implements Message ----------------------------------------------

  inline Adn* New() const { return New(NULL); }

  Adn* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Adn& from);
  void MergeFrom(const Adn& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(Adn* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 direct = 1;
  inline void clear_direct();
  static const int kDirectFieldNumber = 1;
  inline ::google::protobuf::int32 direct() const;
  inline void set_direct(::google::protobuf::int32 value);

  // repeated int32 steps = 2;
  inline int steps_size() const;
  inline void clear_steps();
  static const int kStepsFieldNumber = 2;
  inline ::google::protobuf::int32 steps(int index) const;
  inline void set_steps(int index, ::google::protobuf::int32 value);
  inline void add_steps(::google::protobuf::int32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      steps() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_steps();

  // optional int32 id_village = 3;
  inline void clear_id_village();
  static const int kIdVillageFieldNumber = 3;
  inline ::google::protobuf::int32 id_village() const;
  inline void set_id_village(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:pathman.Adn)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > steps_;
  ::google::protobuf::int32 direct_;
  ::google::protobuf::int32 id_village_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_adn_5fexchange_2eproto();
  friend void protobuf_AssignDesc_adn_5fexchange_2eproto();
  friend void protobuf_ShutdownFile_adn_5fexchange_2eproto();

  void InitAsDefaultInstance();
  static Adn* default_instance_;
};
// ===================================================================


// ===================================================================

// Adn

// optional int32 direct = 1;
inline void Adn::clear_direct() {
  direct_ = 0;
}
inline ::google::protobuf::int32 Adn::direct() const {
  // @@protoc_insertion_point(field_get:pathman.Adn.direct)
  return direct_;
}
inline void Adn::set_direct(::google::protobuf::int32 value) {
  
  direct_ = value;
  // @@protoc_insertion_point(field_set:pathman.Adn.direct)
}

// repeated int32 steps = 2;
inline int Adn::steps_size() const {
  return steps_.size();
}
inline void Adn::clear_steps() {
  steps_.Clear();
}
inline ::google::protobuf::int32 Adn::steps(int index) const {
  // @@protoc_insertion_point(field_get:pathman.Adn.steps)
  return steps_.Get(index);
}
inline void Adn::set_steps(int index, ::google::protobuf::int32 value) {
  steps_.Set(index, value);
  // @@protoc_insertion_point(field_set:pathman.Adn.steps)
}
inline void Adn::add_steps(::google::protobuf::int32 value) {
  steps_.Add(value);
  // @@protoc_insertion_point(field_add:pathman.Adn.steps)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
Adn::steps() const {
  // @@protoc_insertion_point(field_list:pathman.Adn.steps)
  return steps_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
Adn::mutable_steps() {
  // @@protoc_insertion_point(field_mutable_list:pathman.Adn.steps)
  return &steps_;
}

// optional int32 id_village = 3;
inline void Adn::clear_id_village() {
  id_village_ = 0;
}
inline ::google::protobuf::int32 Adn::id_village() const {
  // @@protoc_insertion_point(field_get:pathman.Adn.id_village)
  return id_village_;
}
inline void Adn::set_id_village(::google::protobuf::int32 value) {
  
  id_village_ = value;
  // @@protoc_insertion_point(field_set:pathman.Adn.id_village)
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace pathman

#ifndef SWIG
namespace google {
namespace protobuf {


}  // namespace protobuf
}  // namespace google
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_adn_5fexchange_2eproto__INCLUDED
